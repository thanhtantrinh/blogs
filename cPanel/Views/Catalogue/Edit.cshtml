@using Common
@using Model.ViewModel
@model Model.ViewModel.CatalogueView
@{
    var actionStaus = (ActionResultHelper)Session["ACTION_STATUS"];
    string formAction = String.IsNullOrWhiteSpace(ViewBag.Action) ? "Edit" : ViewBag.Action.ToString();
    Breadcrumb breadcrumb = new Breadcrumb();
}
@Html.Partial("_Breadcrumb", breadcrumb)

@using (Html.BeginForm(formAction, "Catalogue", FormMethod.Post, new { @class = "form-basic", }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="container-fluid">
        <div class="animated fadeIn">
            <div class="row form-horizontal">
                <div class="col-lg-8">
                    <div class="card">
                        <div class="card-header">
                            <i class="icon-note"></i> @ViewBag.Title

                            @if (!String.IsNullOrWhiteSpace(formAction) && formAction == "Edit")
                            {
                                <div class="card-actions">
                                    <a href="@Url.Action("Create")">
                                        <small class="fa fa-plus"></small>
                                    </a>
                                </div>
                            }
                        </div>
                        <div class="card-block">

                            @if (actionStaus != null && !String.IsNullOrWhiteSpace(actionStaus.ErrorReason))
                            {
                                if (actionStaus.ActionStatus == ResultSubmit.failed)
                                {
                                    @Html.Raw(actionStaus.ErrorReason);
                                }
                                else
                                {
                                    @Html.Raw(actionStaus.ErrorReason);
                                }
                                Session["ACTION_STATUS"] = null;
                            }

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group row">
                                @Html.LabelFor(model => model.CatalogueName, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.CatalogueName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CatalogueName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.SiteName, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.SiteName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SiteName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.SiteUrl, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.SiteUrl, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SiteUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.EmailSite, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.EmailSite, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmailSite, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.EmailAdmin, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.EmailAdmin, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmailAdmin, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Address, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Phones, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Phones, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Phones, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Facebook, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Facebook, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Twitter, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Twitter, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Youtube, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Youtube, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Youtube, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.GooglePlus, new { @class = "form-control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.GooglePlus, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.GooglePlus, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="offset-md-3 col-md-8">
                                    @*<button type="submit" class="btn btn-default">Cập nhật</button>*@
                                    <input type="submit" value="Lưu lại" class="btn btn-default" name="save" />
                                    <input type="submit" value="Lưu và Đóng" class="btn btn-primary" name="saveclose" />
                                    <input type="submit" value="Lưu và Tạo mới" class="btn btn-primary" name="savenew" />
                                    <a class="btn btn-warning" onclick="window.location.reload();">Reset</a>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="card">
                        <div class="card-header">
                            SEO
                        </div>
                        <div class="card-block">

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Status, new { @class = "form-control-label col-md-4" })
                                <div class="col-md-8">

                                    <label class="radio-inline" for="inline-radio1">
                                        @*<input type="radio" id="inline-radio1" name="inline-radios" value="option1">One*@
                                        @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Active), new { @class = "radio-inline" })
                                        @nameof(StatusEntity.Active)
                                    </label>
                                    &nbsp;
                                    <label class="radio-inline" for="inline-radio2">
                                        @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Locked), new { @class = "radio-inline" })
                                        @nameof(StatusEntity.Locked)
                                    </label>
                                    &nbsp;
                                    <label class="radio-inline" for="inline-radio3">

                                        @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Deleted), new { @class = "radio-inline" })
                                        @nameof(StatusEntity.Deleted)
                                    </label>

                                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.MetaKeywords, new { @class = "form-control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.MetaKeywords, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(model => model.MetaDescriptions, new { @class = "form-control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.MetaDescriptions, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                <i class="icon-note"></i> @ViewBag.Title

                                @if (!String.IsNullOrWhiteSpace(formAction) && formAction == "Edit")
                        {
                            <div class="card-actions">
                                <a href="@Url.Action("Create")">
                                    <small class="fa fa-plus"></small>
                                </a>
                            </div>
                }
                            </div>
                            <div class="card-block">

                            </div>
                        </div>
                    </div>
                    <!--/.col-->
                </div>
            *@
        </div>
    </div>
}
