@using Model.Extension
@model OnlineShop.Models.PaymentViewModel    
@{
    ViewBag.Title = "Thanh toán";
    Layout = "~/Views/Shared/_LayoutBptchemicals.cshtml";
    decimal subtotal = 0;
    if (Model.cartItems!=null && Model.cartItems.Count()>0)
    {
        subtotal = Model.cartItems.Sum(s => s.Product.Price.Value * s.Quantity);
    }
}
<div id="cart_items" class="content">
    <div class="review-payment">
        <h2>Thông tin giỏ hàng</h2>
    </div>
    <div class="table-responsive cart_info">
        @if (Model.cartItems != null)
        {
            <table class="table table-condensed">
                <thead>
                    <tr class="cart_menu">
                        <td class="image">Sản phẩm</td>
                        <td class="description"></td>
                        <td class="price">Giá</td>
                        <td class="quantity" align="center">Số lượng</td>
                        <td class="total" colspan="2" align="center">Tổng</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.cartItems)
                    {
                        string link = Url.Action("Detail", "Product", new { id = item.Product.ID,   metatitle= item.Product.MetaTitle  });
                        <tr>
                            <td class="cart_product" width="150">
                                <a href="@link" title="@item.Product.Name"><img src="@Url.Content("~/Images/Products/min/" + item.Product.Image)" alt="@item.Product.Name"></a>
                            </td>

                            <td class="cart_description" width="250">
                                <a href="@link" title="@item.Product.Name">@item.Product.Name</a>                            
                            </td>

                            <td class="cart_price" align="right">
                                @item.Product.Price.GetValueOrDefault(0).ToString("N0") VNĐ
                            </td>

                            <td align="center">
                               @item.Quantity
                            </td>

                            <td class="cart_total" width="150" align="right">
                                <p class="cart_total_price">@((item.Product.Price.GetValueOrDefault(0) * item.Quantity).ToString("N0")) VNĐ</p>
                            </td>

                            <td class="cart_delete" width="50" align="center">
                                @*<a data-id="@item.Product.ID" class="btn-primary cart_quantity_delete" href=""><i class="fa fa-times"></i></a>*@
                            </td>

                        </tr>
                    }
                    <tr>
                        <td colspan="4">&nbsp;</td>
                        <td colspan="2">
                            <table class="table table-condensed total-result">
                                <tr>
                                    <td>Tiền hàng</td>
                                    <td align="right">@subtotal.ToString("N0") VNĐ</td>
                                </tr>
                                <tr class="shipping-cost">
                                    <td>Tiền vận chuyển</td>
                                    <td align="right">0 VNĐ</td>
                                </tr>
                                <tr>
                                    <td>Tổng</td>
                                    <td align="right"><span>@subtotal.ToString("N0") VNĐ</span></td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </tbody>
            </table>
        }
        else
        {
            <p>Bạn cần thêm sản phẩm vào giỏ hàng.</p>
        }
    </div>
    @if (Model.cartItems != null)
    {
    <div class="section group">
        @using (Html.BeginForm("Payment", "Cart", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <div class="shopper-informations">
                <div class="row">
         
                    <div class="col-sm-7 clearfix">
                        <div class="bill-to">
                            <p>Giao hàng đến</p>
                            <div class="form-one">
                                @Html.TextBoxFor(m => m.shippingdetail.Fullname, new { placeholder = "Họ và tên *" })
                                @Html.ValidationMessageFor(model => model.shippingdetail.Fullname, "", new { @class = "text-danger" })

                                @Html.TextBoxFor(m => m.shippingdetail.Phone, new { placeholder = "Điện thoại *" })
                                @Html.ValidationMessageFor(model => model.shippingdetail.Phone, "", new { @class = "text-danger" })
                                @*@Html.TextBoxFor(m => m.shippingdetail.CompanyName, new { placeholder = "Tên công ty *" })*@
                                @Html.TextBoxFor(m => m.shippingdetail.Email, new { placeholder = "Email *" })
                                @Html.ValidationMessageFor(model => model.shippingdetail.Email, "", new { @class = "text-danger" })
                              
                            </div>
                            <div class="form-two">
                                @Html.DropDownListFor(model => model.shippingdetail.ProvinceId, ListExtensions.ProvinceList, "-- Tỉnh thành --", new { @class = "form-control ", id = "provinces", onchange = "buildDistricts();" })
                                @Html.ValidationMessageFor(model => model.shippingdetail.ProvinceId, "", new { @class = "text-danger" })
                                <select class="form-control" id="ddlDistricts">
                                    <option>-- Quận / Huyện  --</option>
                                </select>

                                @*<input name="address" type="text" placeholder="Địa chỉ 1 *">*@
                                @Html.TextBoxFor(m => m.shippingdetail.Address, new { placeholder = "Địa chỉ 1 *" })
                                @Html.ValidationMessageFor(model => model.shippingdetail.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-5">
                        <div class="order-message">
                            <p>Yêu cầu khác</p>
                            @*<textarea name="message" placeholder="Những yêu cầu khác nếu có ..." rows="16"></textarea>*@
                            @Html.TextAreaFor(m => m.shippingdetail.Email, 16, 5,new { placeholder = "Những yêu cầu khác nếu có ..." })
                            <div class="shopper-info">                                
                                <div class="payment-options">
                                    <button class="btn btn-primary" type="submit">Thanh toán</button>
                                    <a class="btn btn-primary" href="@Url.Action("Index", "Home")">Tiếp tục mua hàng</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @section scriptsFooter{
        <script>

        function buildDistricts()
        {
            var url = '@Url.Action("ListDistricts")';
            var PDD= $("#ddlDistricts");
            var idProvince= $("#provinces").val();
            $.getJSON(url, { id: idProvince}, function (response) {

                PDD.empty();
                $.each(response.result, function (index, item) {
                    //debugger;
                    var p = new Option(item.Text, item.Value);
                    PDD.append(p);
                });

            });
        }
        </script>
    }
}
</div>

