@using OnlineShop.Helpers
@model Model.ViewModel.ProductsView
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
    var actionStaus = (ActionResultHelper)Session["ACTION_STATUS"];
}
@section jsFooter{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })
        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/assets/admin/js/plugins/ckeditor/config.js',
        });
    </script>
}
@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { @class = "myclass", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Thông tin chính
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })  
                            @if (actionStaus != null && !String.IsNullOrWhiteSpace(actionStaus.ErrorReason))
                            {
                                <div class="row">
                                    <div class="col-sm-12">
                                        @if (actionStaus.ActionStatus == ResultSubmit.failed)
                                        {
                                            @Html.Raw(actionStaus.ErrorReason);
                                        }
                                        else
                                        {
                                            @Html.Raw(actionStaus.ErrorReason);
                                        }
                                    </div>
                                </div>
                                Session["ACTION_STATUS"] = null;
                            }
                            <ul class="nav nav-tabs" role="tablist">
                                <li role="presentation" class="active"><a href="#tabproduct" aria-controls="tabproduct" role="tab" data-toggle="tab">Sản phẩm</a></li>
                                <li role="presentation"><a href="#tabimages" aria-controls="tabimages" role="tab" data-toggle="tab">Hình ảnh</a></li>
                                <li role="presentation"><a href="#tabdetail" aria-controls="tabdetail" role="tab" data-toggle="tab">Mô tả</a></li>
                            </ul>
                            <!-- Tab panes -->
                            <div class="tab-content">
                                <div role="tabpanel" class="tab-pane active" id="tabproduct">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PromotionPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PromotionPrice, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PromotionPrice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(model => model.CategoryID, ListExtensions.CategoryList, new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                                <div role="tabpanel" class="tab-pane" id="tabimages">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @*@Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control" }, id = "txtImage" })*@
                                            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })

                                            <div class="input-group">
                                                <div class="input-group-btn group">
                                                    <a class="btn btn-default" data-toggle="tooltip" data-placement="bottom" title=""><i class="fa fa-eye"></i></a>
                                                </div>

                                                @Html.TextBoxFor(model => model.Images, new { @class = "form-control", @id = "txtImage" })
                                                <div class="input-group-btn">
                                                    <a id="btnSelectImage" class="btn btn-default" href="#"><i class="fa fa-image"></i> Chọn</a>
                                                    <a id="btnRemoveImage" class="btn btn-default" href="#" data-toggle="tooltip" data-placement="top" title="Clear"><i class="fa fa-remove"></i></a>
                                                </div>

                                            </div>
                                            @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div role="tabpanel" class="tab-pane" id="tabdetail">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent" })
                                            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Meta
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Status)
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
