@using OnlineShop.Helpers
@using Common
@using ModelExtentions = Model.Extension
@using Model.ViewModel
@model ProductCategoryView
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
    var actionStaus = (ActionResultHelper)Session[SessionName.ActionStatusLog];
}

@section header{
    Cập nhật nhóm sản phẩm
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Thông tin chính
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-horizontal">
                            @if (actionStaus != null && !String.IsNullOrWhiteSpace(actionStaus.ErrorReason))
                            {
                                if (actionStaus.ActionStatus == ResultSubmit.failed)
                                {
                                    @Html.Raw(actionStaus.ErrorReason);
                                }
                                else
                                {
                                    @Html.Raw(actionStaus.Message);
                                }
                                Session[SessionName.ActionStatusLog] = null;
                            }

                            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ID)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaTitle, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.MetaTitle, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ParentID, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ParentID, ModelExtentions.ListExtensions.ProductCategoriesByCatalogueId(SiteConfiguration.CatalogueId), new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DisplayOrder, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DisplayOrder, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SeoTitle, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SeoTitle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaKeywords, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MetaDescriptions, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MetaDescriptions, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <div class="input-group-btn">
                                        <input type="submit" value="Lưu lại" class="btn btn-default" name="save" />
                                        <input type="submit" value="Lưu và Đóng" class="btn btn-primary" name="saveclose" />
                                        <input type="submit" value="Lưu và Tạo mới" class="btn btn-primary" name="savenew" />
                                        <a class="btn btn-warning" onclick="window.location.reload();">Reset</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Meta
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, new { @class = "form-control-label col-md-4" })
                            <div class="col-md-8">

                                <label class="radio-inline" for="inline-radio1">
                                    @*<input type="radio" id="inline-radio1" name="inline-radios" value="option1">One*@
                                    @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Active), new { @class = "radio-inline" })
                                    @nameof(StatusEntity.Active)
                                </label>
                                &nbsp;
                                <label class="radio-inline" for="inline-radio2">
                                    @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Locked), new { @class = "radio-inline" })
                                    @nameof(StatusEntity.Locked)
                                </label>                           

                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShowOnHome, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.ShowOnHome)
                                    @Html.ValidationMessageFor(model => model.ShowOnHome, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedBy, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.TextBoxFor(model => model.CreatedByName, new { @class = "form-control", @disabled = "true" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.Raw(Model.CreatedDate)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedBy, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @*@Html.Raw(Model.ModifiedByName)*@
                                    @Html.TextBoxFor(model => model.ModifiedByName, new { @class = "form-control", @disabled = "true" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedDate, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.Raw(Model.ModifiedDate)
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}