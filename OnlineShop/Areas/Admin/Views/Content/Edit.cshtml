@using Common
@using OnlineShop.Helpers
@using Model.ViewModel

@model ContentViewModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
    var actionStaus = (ActionResultHelper)Session[SessionName.ActionStatusLog];
    string formAction = String.IsNullOrWhiteSpace(ViewBag.Action) ? "Edit" : ViewBag.Action.ToString();
}

@section header{
    Sửa tin tức
}
@section jsFooter{
    <script>
        var editor = CKEDITOR.replace('txtContent', {
            customConfig: '/assets/admin/js/plugins/ckeditor/config.js',
        });
    </script>
}
@using (Html.BeginForm(formAction, "Content", FormMethod.Post, new { @class = "myclass", role = "form" }))
{

    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <strong><i class="fa fa-edit"></i> @ViewBag.Title</strong>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">

                        @if (actionStaus != null && !String.IsNullOrWhiteSpace(actionStaus.ErrorReason))
                        {
                            if (actionStaus.ActionStatus == ResultSubmit.failed)
                            {
                                @Html.Raw(actionStaus.ErrorReason);
                            }
                            else
                            {
                                @Html.Raw(actionStaus.Message);
                            }
                            Session[SessionName.ActionStatusLog] = null;
                        }

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaTitle, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextBoxFor(model => model.MetaTitle, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryID, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.CategoryID, ListExtensions.CategoryListByCatalogueId(SiteConfiguration.CatalogueId), new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Description, 5, 10, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Detail, new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Detail, new { @class = "form-control" , id = "txtContent" })
                                @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <input type="submit" value="Lưu lại" class="btn btn-default" name="save" />
                                <input type="submit" value="Lưu lại và Đóng" class="btn btn-primary" name="saveclose" />
                                <a class="btn btn-warning" onclick="window.location.reload();">Reset</a>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Meta
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <label class="radio-inline" for="inline-radio1">
                                    @*<input type="radio" id="inline-radio1" name="inline-radios" value="option1">One*@
                                    @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Active), new { @class = "radio-inline" })
                                    Xuất bản
                                </label>
                                &nbsp;
                                <label class="radio-inline" for="inline-radio2">
                                    @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Locked), new { @class = "radio-inline" })
                                    Chờ
                                </label>
                                @*&nbsp;
        <label class="radio-inline" for="inline-radio3">
            @Html.RadioButtonFor(m => m.Status, nameof(StatusEntity.Deleted), new { @class = "radio-inline" })
            Xóa
        </label>*@

                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="input-group">
                                    <div class="input-group-btn group">
                                        <a class="btn btn-default" data-toggle="tooltip" data-placement="bottom" title="<img width='100' src='@Model.Image' />"><i class="fa fa-eye"></i></a>
                                    </div>
                                    @Html.TextBoxFor(model => model.Image, new { @class = "form-control", @id = "txtImage" })
                                    <div class="input-group-btn">
                                        <a id="btnSelectImage" class="btn btn-default" href="#"><i class="fa fa-image"></i> Chọn</a>
                                        <a id="btnRemoveImage" class="btn btn-default" href="#" data-toggle="tooltip" data-placement="top" title="Clear"><i class="fa fa-remove"></i></a>
                                    </div>

                                </div>
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Warranty, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Warranty, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaKeywords, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.MetaKeywords, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaDescriptions, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.MetaDescriptions, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MetaDescriptions, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedByName, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.CreatedByName, new { @class = "form-control", @disabled = "true" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.CreatedDate, new { @class = "form-control", @disabled = "true" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedBy, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ModifiedByName, new { @class = "form-control", @disabled = "true" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ModifiedDate, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ModifiedDate, new { @class = "form-control", @disabled = "true" })
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>

    </div>
}
